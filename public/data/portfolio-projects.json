[
    {
        "title":"blank"
    },
    {
        "title": "M-M.Social",
        "description": "A MERN stack microblogging platform. Users have the ability to register accounts, create and tag posts, upload images, follow other users for their personalized feed, like posts, and quote other posts in their own. Makes use of a React Router frontend which interacts with a REST API(MongoDB, Express, Node) backend, called M-M.Api.",
        "image": "/assets/images/m-minstitute-alpha.png",
        "repo":"https://github.com/the-neighbor/M-M.Institute.2023",
        "live":"",
        "technologies": [
            "React",
            "Node",
            "Express",
            "MongoDB",
            "JavaScript",
            "HTML",
            "CSS"
        ]
    },
    {
        "title": "Python-Chess",
        "description": "A command line implementation of chess in Python 3. Users have the ability to play locally against another human opponent, against a computer opponent, or to watch the computer play against itself. The computer opponent makes use of a recursive search algorithm and scoring heuristic in order to try and pick the move that results in the most advantageous board state. Players also have the ability to save and load games.",
        "image": "/assets/images/chess-alpha.png",
        "imageBeta": "/assets/images/chess-beta.png",
        "repo":"https://github.com/the-neighbor/Python-Chess"
    },
    {
        "title": "M-M.GridGen",
        "description": "A generator for randomized grid layouts. When provided with a width, height, and number of pieces, the generator will make a request to the server. The server then runs a recursive backtracking algorithm to find an arrangement of that many rectangular pieces that completely fills the grid without any overlaps. The pieces are shuffled each time the generator is run, resulting in different arrangements each time, even with the same input parameters. The generator also provides the user with the CSS necessary to implement the generated grid layout, and a visual preview of said layout.",
        "image": "https://raw.githubusercontent.com/the-neighbor/M-M.GridGenAPI/main/public/assets/wide.jpg",
        "repo":"https://github.com/the-neighbor/M-M.GridGenAPI",
        "live":""
    },
    {
        "title": "M-M.CookBook",
        "description": "A community recipe tracker. Users have the ability to view, add, edit, or delete recipes, their instructions, and their ingredients. The application consists of a Bootstrap frontend which interacts with a MySQL database through a REST API made using Node and Express. The application also makes uses of googles custom search engine API to provide users with images of each recipe automatically in the event that one is not provided manually with the recipe submission.",
        "image": "https://raw.githubusercontent.com/the-neighbor/M-M.RecipeTracker/main/images/alpha.png",
        "repo":"https://github.com/the-neighbor/M-M.RecipeTracker"
    },
    {
        "title": "M-M.Radio",
        "description": "An internet radio station. Users have the ability to listen to a live stream of music, view the current song playing, and view scheduled segments/events. The application consists of a React frontend with client side routing to support multiple pages. The radio station itself is hosted on a separate server and is streamed to the client using the icecast protocol.",
        "image": "/assets/images/radio-alpha.png",
        "repo":"https://github.com/the-neighbor/M-M.RadioPlayer"
    },
    {
        "title": "M-M.Institute",
        "description": "A web page for a fictional institution. The page is built using HTML, CSS, and JavaScript with the React library, and allows the user to browse courses for different interests.",
        "image": "/assets/images/home-alpha.png",
        "imageBeta": "/assets/images/home-beta.png",
        "repo":"https://github.com/the-neighbor/M-M.Home",
        "live":""
    },
    {
        "title": "M-M.Api",
        "description": "A REST API for the M-M.Social platform. The API is responsible for handling user authentication, account creation, and creating and interacting with blog posts. The API is built using Node and Express, and interacts with a MongoDB database.",
        "image": "/assets/images/m-minstitute-alpha.png",
        "repo":"https://github.com/the-neighbor/M-M.Api",
        "live":""
    },
    {
        "title": "M-M.Gallery",
        "description": "A gallery of art work. The gallery is built using React and allows the user to view different pieces of original artwork created at the institute, and displays information about each piece in a modal when clicked.",
        "image": "/assets/images/gallery-alpha.jpg",
        "imageBeta": "/assets/images/gallery-beta.jpg",
        "repo":"https://github.com/the-neighbor/M-M.Gallery",
        "live":""
    }
]
